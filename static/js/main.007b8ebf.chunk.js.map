{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","components/buttons/ActionButton.js","utils/helpers.js","audio/SoundEffect.js","context/AppProvider.js","components/generic/AppUIStateToggle.js","components/Inputs/Input.js","components/Inputs/Options.js","components/generic/TimeInputs.js","components/generic/DigitalWatch.js","components/generic/TimerActionButtons.js","components/generic/TimerDisplay.js","components/generic/PauseDisplay.js","components/generic/TimerGoal.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/generic/TimerRenderer.js","components/timers/RenderState.js","components/timers/Tabata.js","components/timers/XY.js","context/settings.js","components/buttons/AnchorButton.js","components/generic/DisplayBreaks.js","components/generic/DisplayRounds.js","components/generic/TimerToolBar.js","components/generic/DisIcon.js","components/generic/QueueItem.js","components/generic/TimerSubtitle.js","components/generic/TimerTitle.js","components/generic/TimerCollection.js","views/DocumentationView.js","components/generic/Container.js","views/AddTimersView.js","views/DashboardView.js","App.js","index.js"],"names":["Wrapper","styled","div","Container","Title","RenderComponent","Documentation","table","DocumentComponent","this","props","title","component","propDocs","map","doc","index","prop","description","type","defaultValue","React","Component","sizeMapping","small","medium","large","Dot","span","size","color","DotGroup","Loading","defaultProps","ActionButton","theme","onClick","name","className","_timeToSeconds","hours","minutes","seconds","parseInt","_timeToDisplay","input","dateTime","Date","setSeconds","timeVal","toISOString","substr","ex","playAudio","clip","volume","clips","APP_AUDIO","CLIPS","audio","Audio","default","VOLUME","play","AppContext","createContext","status","setTimerStatus","val","setHours","setMinutes","breakHours","setBreakHours","breakMinutes","setBreakMinutes","breakSeconds","setBreakSeconds","workoutStatus","setWorkoutStatus","formattedTime","currentTime","setCurrentTime","onInitializeTimerQueue","onAddTimer","onStopTimer","timerQueue","workflowState","currentTimer","_setCurrentTimer","_shouldRender","rounds","setRounds","onSkipRound","interfaceState","setInterfaceState","formattedBreakTime","_removeFromQueue","setTimer","onFastForward","AppProvider","children","useState","setformattedTime","setformattedBreakTime","APP_FLOW_KEYS","WORKOUT","setWorkflowState","APP_RENDER_KEYS","COUNTDOWN","APP_UI_KEYS","FLOW","setTimerQueue","queueIndex","setQueueIndex","_activateNextTimer","timer","timout","setTimeout","_setInitialTimeSettings","length","clearTimeout","tis","btis","vebros","alert","XY","TABATA","_validateTimerInputs","timeInSeconds","newTime","fTime","onReachedGoal","APP_AUDIO_CLIP_KEYS","ON_REACHED_GOAL","onCompleteRound","ON_COMPLETE_ROUND","useEffect","fdTime","setTimerToDisplay","timeout","target","REST","STOPWATCH","Provider","value","ON_TIMING","ON_STOP_TIMER","e","state","id","temp","forEach","i","push","ON_REMOVE_ITEM","AppUIStateToggle","useContext","SETTINGS","iconRef","APP_ICON_KEYS","BACK","Input","onChange","placeholder","label","Options","current","options","TimeInputs","onSetHours","onSetSeconds","onSetMinutes","secarr","Array","keys","shift","DigitalWatch","displayTime","onCloseTimer","toggleOnSettings","scheduleName","setScheduleName","TimerActionButtons","onPauseTimer","active","undefined","icon","APP_ICONS","PAUSE","radious","FAST_FORWARD","RESET","TimerDisplay","TimerButtons","renderState","PauseDisplay","onResumeTimer","RESUME","TimerGoal","alt","src","StopWatch","Countdown","TimerRenderer","displayBreakTime","onSetBreakHours","onSetBreakMinutes","onSetBreakSeconds","RenderState","Tabata","server","MENU","DELETE","style","fontSize","START_TIMER","PLAY","QUEUE","ON_START_TIMER","ON_CLICK","ON_PAUSE","DEFAULT","TIMER_REF","RENDER_STATE","APP_TIMERS","subTitle","C","Stopwatch","S","recId","AnchorButton","to","IconRef","DisplayBreaks","onConvertToTime","DisplayRounds","onStartTiming","onSetRounds","TimerToolBar","accessToggle","DisIcon","QueueItem","onDelete","TimerSubtitle","TimerTitle","TimerCollection","Note","href","currentValues","height","progress","join","minHeight","AddTimerView","Timers","DashboardView","duration","queue","ms","h","m","s","_queueToTotalDuration","App","exact","path","DocumentationView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.007b8ebf.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #dddddd;\n  margin: 20px 0px;\n  border-radius: 0px;\n  box-shadow: 0px 5px 9px 0px #0000003d;\n  border-bottom: 2px solid #0085c5;\n`;\n\nconst Container = styled.div`\n  justify-content: center;\n  width: auto;\n  height: 100%;\n  overflow: hidden;\n  background: white;\n  padding: 50px;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\nalign-items: center;\n    margin: auto;\n    width: auto;\n    display: table;\n`;\n\nconst Documentation = styled.table``;\n\nclass DocumentComponent extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        <Title>{this.props.title}</Title>\n        <Container>\n          <RenderComponent>{this.props.component}</RenderComponent>\n          <Documentation>\n            <tbody>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n            {this.props.propDocs.map((doc, index) => {\n              return (\n                <tr key={index}>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n            </tbody>\n          </Documentation>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nclass Loading extends React.Component {\n  render() {\n    const size = sizeMapping[this.props.size];\n    const { color } = this.props;\n\n    return (\n      <Container>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n      </Container>\n    );\n  }\n}\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  size: \"medium\",\n  color: primaryColor,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ActionButton.css\";\n\nconst ActionButton = ({theme, onClick, name}) => {\n  return <button className={theme} onClick={onClick}>{name}</button>;\n}\n\nActionButton.propTypes = {\n  theme: PropTypes.string,\n  onClick: PropTypes.func,\n  name: PropTypes.string,\n};\n\nActionButton.defaultProps = {\n  theme: \"default-action-button\",\n  onClick: ()=>{},\n  name: \"Untitled\",\n};\n\nexport default ActionButton;","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// import { Helpers } from \"react-scroll\";\n\nimport { APP_RENDER_KEYS } from \"../context/settings\";\n\n// _________________________________________________________________ //\n// These changes are to comply with the course requirements.\n// - Change all ES5 code to ES6.\n\n// Create a module i will be using as a handle. Sys seem's short and sexy.\n\n// Convert time to seconds. Single liner. Hmm. I'm learning.\nexport const _timeToSeconds = ({ hours, minutes, seconds }) =>\n  parseInt(hours * 60 * 60) + parseInt(minutes * 60) + parseInt(seconds);\n\n// Convert to time string. If we reveive an input, which is already in seconds, there should be no need to do additional calculations.\nexport const _timeToDisplay = ({ input, hours, minutes, seconds }) => {\n  let dateTime = new Date(null);\n  dateTime.setSeconds(input || _timeToSeconds({ hours, minutes, seconds })); // specify value of SECONDS\n  let timeVal = \"\";\n  try {\n    timeVal = dateTime.toISOString().substr(11, 8);\n  } catch (ex) {\n    timeVal = \"00:00:00\";\n  }\n  return timeVal;\n};\n\nexport const _queueToTotalDuration = ({ queue }) => {\n  let ms = {h:0,m:0,s:0};\n  queue.forEach(e => {\n    if (e.currentTimer === APP_RENDER_KEYS.COUNTDOWN || e.currentTimer === APP_RENDER_KEYS.STOPWATCH) {\n      ms.h += e.hours;\n      ms.m += e.minutes;\n      ms.s += e.seconds;\n    } else if (e.currentTimer === APP_RENDER_KEYS.XY || e.currentTimer === APP_RENDER_KEYS.TABATA) {\n      ms.h += e.hours * e.rounds;\n      ms.m += e.minutes * e.rounds;\n      ms.s += e.seconds * e.rounds;\n      // Maybe we should add resting time as-well.\n      ms.h += e.breakHours * e.rounds;\n      ms.m += e.breakMinutes * e.rounds;\n      ms.s += e.breakSeconds * e.rounds;\n    }\n\n  });\n\n  return _timeToDisplay({hours:ms.h, minutes:ms.m, seconds:ms.s});\n};\n\n// Helper Methods","import React from \"react\";\nimport { APP_AUDIO } from \"../context/settings\";\n\n// I am no longer using Hawler due to problems while getting \n// audio url from createObjectURL. Not to mention the inconsistancy.\n// Will leave this here for reference to changes made.\nconst SoundEffect = () => {\n  // deprecated.\n  return <></>;\n};\n\n// New function for playing audio. \n// Clips are predefined, and can only be changed from the [clips] Associative array.\nexport const playAudio = ({clip, volume}) => {\n  const clips = APP_AUDIO.CLIPS;\n  const audio = new Audio(clips[clip] || clips.default);\n  audio.volume = volume || APP_AUDIO.VOLUME;\n  audio.play();\n}\n\n\n// Still exporting sound effects, because generally, after changes we don't remove code. \n// Old habits die hard. :(\nexport default SoundEffect;\n","import React, { useState, useEffect } from \"react\";\nimport { _timeToSeconds, _timeToDisplay } from \"../utils/helpers\";\nimport { playAudio } from \"../audio/SoundEffect\";\nimport {\n  APP_RENDER_KEYS,\n  APP_FLOW_KEYS,\n  APP_UI_KEYS,\n  setTimerToDisplay,\n  APP_AUDIO_CLIP_KEYS,\n} from \"./settings\";\n\n// Presets for the AppContext.\n// This list will grow exponentially as the application grows.\n// Still thinking of ways to manage this better.\n\nexport const AppContext = React.createContext({\n  status: \"inactive\",\n  setTimerStatus: (val) => {},\n  hours: 0,\n  setHours: (val) => {},\n  minutes: 0,\n  setMinutes: (val) => {},\n  seconds: 0,\n  setSeconds: (val) => {},\n  breakHours: 0,\n  setBreakHours: (val) => {},\n  breakMinutes: 0,\n  setBreakMinutes: (val) => {},\n  breakSeconds: 0,\n  setBreakSeconds: (val) => {},\n  workoutStatus: \"\",\n  setWorkoutStatus: (val) => {},\n  formattedTime: \"\",\n  currentTime: \"\",\n  setCurrentTime: (val) => {},\n  onInitializeTimerQueue: (val) => {},\n  onAddTimer: (val) => {},\n  onStopTimer: (val) => {},\n  timerQueue: [],\n  workflowState: \"Workout\",\n  currentTimer: null,\n  _setCurrentTimer: (val) => {},\n  _shouldRender: (val) => {},\n  rounds: 0,\n  setRounds: (val) => {},\n  onSkipRound: (val) => {},\n  interfaceState: null,\n  setInterfaceState: () => {},\n  formattedBreakTime: \"\",\n  _removeFromQueue: () => {},\n  setTimer: () => {},\n  onFastForward: () => {},\n});\n\n// I decided to move all the effects up one level to the global context.\n// That is, all effects will be handled with context. DRY. [ :) ]\nconst AppProvider = ({ children }) => {\n  const [status, setTimerStatus] = useState(\"active\");\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(2);\n  const [seconds, setSeconds] = useState(30);\n  const [rounds, setRounds] = useState(5);\n  const [breakHours, setBreakHours] = useState(0);\n  const [breakMinutes, setBreakMinutes] = useState(1);\n  const [breakSeconds, setBreakSeconds] = useState(30);\n  const [workoutStatus, setWorkoutStatus] = useState(\"Workout\");\n  const [formattedTime, setformattedTime] = useState(\"\");\n  const [formattedBreakTime, setformattedBreakTime] = useState(\"\");\n  const [currentTime, setCurrentTime] = useState(\"\");\n  const [workflowState, setWorkflowState] = useState(APP_FLOW_KEYS.WORKOUT);\n  const [currentTimer, setTimer] = useState(APP_RENDER_KEYS.COUNTDOWN);\n  const [interfaceState, setInterfaceState] = useState(APP_UI_KEYS.FLOW);\n  const [timerQueue, setTimerQueue] = useState([]);\n  const [queueIndex, setQueueIndex] = useState(0);\n\n  /**###################################################################################\n   * In context helper methods.\n   * ###################################################################################\n   * Reservered for all my helper methods.\n   */\n\n  const _activateNextTimer = ({ timer }) => {\n    setTimer(timer.currentTimer);\n    setWorkflowState(APP_FLOW_KEYS.WORKOUT);\n\n    const timout = setTimeout(() => {\n      setHours(timer.hours);\n      setMinutes(timer.minutes);\n      setSeconds(timer.seconds);\n      setRounds(timer.rounds);\n      setBreakHours(timer.breakHours);\n      setBreakMinutes(timer.breakMinutes);\n      setBreakSeconds(timer.breakSeconds);\n      _setInitialTimeSettings();\n      setQueueIndex(timerQueue.length > queueIndex ? queueIndex + 1 : 0);\n      setTimerStatus(\"timing\");\n    }, 500);\n\n    return () => {\n      clearTimeout(timout);\n    };\n  };\n\n  const _validateTimerInputs = (tis, btis, vebros = true) => {\n    if (tis === 0) {\n      if (vebros)\n        alert(\"Please make sure you set the time limits before continuing.\");\n      return false;\n    } else if (currentTimer === APP_RENDER_KEYS.XY && btis === 0) {\n      if (vebros)\n        alert(\"Please make sure you specify break duration before continuing.\");\n      return false;\n    } else if (\n      (currentTimer === APP_RENDER_KEYS.XY ||\n        currentTimer === APP_RENDER_KEYS.TABATA) &&\n      rounds === 0\n    ) {\n      if (vebros)\n        alert(\n          \"Please make sure you set timer rounds limits before continuing.\"\n        );\n      return false;\n    }\n    return true;\n  };\n\n  const _setInitialTimeSettings = () => {\n    let timer = timerQueue[queueIndex];\n    // Time in seconds for main timer\n    const tis = _timeToSeconds({\n      hours: timer.hours,\n      minutes: timer.minutes,\n      seconds: timer.seconds,\n    });\n    // Time in seconds for break timer.\n    const btis = _timeToSeconds({\n      hours: timer.breakHours,\n      minutes: timer.breakMinutes,\n      seconds: timer.breakSeconds,\n    });\n\n    // Validation of inputs for all components.\n    if (!_validateTimerInputs(tis, btis, false)) return false;\n\n    let timeInSeconds = 0;\n    if (timer.currentTimer === APP_RENDER_KEYS.COUNTDOWN) {\n      timeInSeconds = tis;\n    }\n\n    let newTime = 0;\n    if (timer.currentTimer === APP_RENDER_KEYS.COUNTDOWN) {\n      newTime = tis;\n    }\n    const fTime = _timeToDisplay({ input: newTime });\n    // Set state values for formated time, and new current time.\n    setformattedTime(fTime);\n    setCurrentTime(newTime);\n    setCurrentTime(timeInSeconds);\n    setformattedTime(_timeToDisplay({ input: timeInSeconds }));\n    setformattedBreakTime(_timeToDisplay({ input: btis }));\n\n    return true;\n  };\n\n  const _removeFromQueue = (id) => {\n    let temp = [];\n    timerQueue.forEach((e, i) => {\n      if (id !== i) {\n        temp.push(e);\n      }\n    });\n    setTimerQueue(temp);\n    playAudio({ clip: APP_AUDIO_CLIP_KEYS.ON_REMOVE_ITEM });\n  };\n\n  const _setCurrentTimer = (e) => {\n    setTimer(e);\n    setTimerStatus(\"active\");\n  };\n\n  const _shouldRender = ({ state }) => currentTimer === state;\n\n  /**###################################################################################\n   * Events come here.\n   * ###################################################################################\n   * Reservered for all my events.\n   */\n\n  const onFastForward = () => {\n    onReachedGoal();\n  }\n  // Handle Stop Timer button onclick here.\n  const onStopTimer = () => {\n    const fTime = _timeToDisplay({\n      hours,\n      minutes,\n      seconds,\n    });\n    const fdTime = _timeToDisplay({\n      hours: breakHours,\n      minutes: breakMinutes,\n      seconds: breakSeconds,\n    });\n    setTimerStatus(\"inactive\");\n    setformattedTime(fTime);\n    setformattedBreakTime(fdTime);\n    setCurrentTime(0);\n    playAudio({ clip: APP_AUDIO_CLIP_KEYS.ON_STOP_TIMER });\n  };\n\n  // Handle start timing button onclick here.\n  const onInitializeTimerQueue = () => {\n    if (timerQueue.length === 0) {\n      alert(\"Please add items to the workout queue first!\");\n      return;\n    }\n    _activateNextTimer({\n      timer:\n        queueIndex >= timerQueue.length\n          ? timerQueue[0]\n          : timerQueue[queueIndex],\n    });\n\n    if (_setInitialTimeSettings()) {\n      playAudio({ clip: APP_AUDIO_CLIP_KEYS.ON_TIMING });\n    }\n  };\n\n  const onAddTimer = ({ name }) => {\n    if (name.length === 0) {\n      alert(\"Timer name can't be left blank!\");\n      return;\n    }\n\n    // Append current this configurations to the timerQueue.\n    setTimerQueue([\n      ...timerQueue,\n      {\n        name: name,\n        status: status,\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds,\n        rounds: rounds,\n        breakHours: breakHours,\n        breakMinutes: breakMinutes,\n        breakSeconds: breakSeconds,\n        workoutStatus: workoutStatus,\n        formattedTime: formattedTime,\n        currentTime: currentTime,\n        workflowState: workflowState,\n        currentTimer: currentTimer,\n        interfaceState: interfaceState,\n      },\n    ]);\n  };\n\n  // Any action on reach goal comes here, that is, once the timer reaches\n  // it's target value, negative or positive.\n  const onReachedGoal = () => {\n    if (queueIndex < timerQueue.length) {\n      _activateNextTimer({ timer: timerQueue[queueIndex] });\n    } else {\n      setQueueIndex(0);\n      setTimerStatus(\"complete\");\n    }\n    playAudio({ clip: APP_AUDIO_CLIP_KEYS.ON_REACHED_GOAL });\n  };\n\n  // Any action on round complete comes here before next render.\n  const onCompleteRound = () => {\n    playAudio({ clip: APP_AUDIO_CLIP_KEYS.ON_COMPLETE_ROUND });\n  };\n\n  const onSkipRound = () => {\n    if (\n      (currentTimer !== APP_RENDER_KEYS.TABATA &&\n        currentTimer !== APP_RENDER_KEYS.XY) ||\n      rounds <= 0\n    )\n      return;\n\n    const fdTime = _timeToDisplay({\n      hours: breakHours,\n      minutes: breakMinutes,\n      seconds: breakSeconds,\n    });\n    setRounds(rounds - 1);\n    setWorkflowState(APP_FLOW_KEYS.WORKOUT);\n    onCompleteRound();\n    setformattedBreakTime(fdTime);\n    setformattedTime(formattedTime);\n    setCurrentTime(0);\n  };\n\n  /**###################################################################################\n   * HOOKS COME HERE\n   * ###################################################################################\n   * Reservered for all my hooks.\n   */\n\n  useEffect(() => {\n    const fTime = _timeToDisplay({\n      hours,\n      minutes,\n      seconds,\n    });\n    const fdTime = _timeToDisplay({\n      hours: breakHours,\n      minutes: breakMinutes,\n      seconds: breakSeconds,\n    });\n    setformattedTime(fTime);\n    setformattedBreakTime(fdTime);\n  }, [hours, minutes, seconds, breakHours, breakMinutes, breakSeconds]);\n  \n  /* CHANGE IMPLEMENTED */\n  /*---------------------------------------------------------------------------------------------*/\n  // TO-WIT: Changed access to currentTimer. This is now handle with context.\n  // That is, all components access this value from AppContext Provider, instead of const globals.\n  // Notice, the value is still kept in a global const. However, a copy of it is accessable with context.\n  useEffect(() => {\n    setTimerToDisplay(currentTimer);\n  }, [currentTimer]);\n\n  // This hook handles the tick function, and cleanup of interval before next render.\n  useEffect(() => {\n    // Check if we are allowed to start the tick function.\n    // Prevent subscription from executing every time.\n    if (status !== \"timing\") return;\n\n    const timeout = setTimeout(() => {\n      // Should we increment or decrement the count?\n      let newTime =\n        currentTimer === APP_RENDER_KEYS.COUNTDOWN\n          ? currentTime - 1\n          : currentTime + 1;\n\n      // Test and return the right timer based on the APP_RENDER_KEYS and APP_FLOW_KEYS.\n      // Notice, target time changes based on currentTimer and workflowState.\n      // Also, it's relatively clean to manage everything here.\n      const target =\n        currentTimer === APP_RENDER_KEYS.XY\n          ? workflowState === APP_FLOW_KEYS.REST\n            ? _timeToSeconds({\n                hours: breakHours,\n                minutes: breakMinutes,\n                seconds: breakSeconds,\n              })\n            : _timeToSeconds({ hours, minutes, seconds })\n          : _timeToSeconds({ hours, minutes, seconds });\n\n      // Test if the timer has reached it's goal.\n      if (newTime < 0 && currentTimer === APP_RENDER_KEYS.COUNTDOWN) {\n        onReachedGoal();\n        return;\n      } else if (\n        newTime >= target &&\n        currentTimer === APP_RENDER_KEYS.STOPWATCH\n      ) {\n        onReachedGoal();\n        return;\n      } else if (newTime >= target && currentTimer === APP_RENDER_KEYS.TABATA) {\n        if (workflowState === APP_FLOW_KEYS.WORKOUT) {\n          setWorkflowState(APP_FLOW_KEYS.REST);\n          newTime = 0;\n        } else if (rounds > 1) {\n          setRounds(rounds - 1);\n          newTime = 0;\n          setWorkflowState(APP_FLOW_KEYS.WORKOUT);\n          onCompleteRound();\n        } else {\n          setWorkflowState(APP_FLOW_KEYS.WORKOUT);\n          onReachedGoal();\n          return;\n        }\n      } else if (newTime >= target && currentTimer === APP_RENDER_KEYS.XY) {\n        if (rounds > 1) {\n          setRounds(rounds - 1);\n          newTime = 0;\n          onCompleteRound();\n        } else {\n          onReachedGoal();\n          return;\n        }\n      }\n\n      // Set the display time, which is to be use for display in the digital watch display.\n      const fTime = _timeToDisplay({ input: newTime });\n      const fdTime = _timeToDisplay({\n        hours: breakHours,\n        minutes: breakMinutes,\n        seconds: breakSeconds,\n      });\n      // Set state values for formated time, and new current time.\n      setformattedTime(fTime);\n      setformattedBreakTime(fdTime);\n      setCurrentTime(newTime);\n    }, 1000);\n\n    return () => {\n      // Lets clean up the timeout object to avoid memory leaking.\n      clearTimeout(timeout);\n    };\n    // Monitor both the current time and status to alsp\n    // allow trigger once the status changes back to timing.\n\n    // At this point, I'm only adding additional dependencies to avoid useEffect dependency hell.\n    // Will need to review this part of the code.\n    // I do controll executions of this subscription though, on top level. So, this should only run when\n    // the workflow state is timing.\n  });\n\n  // Pass getters and setters down to child components.\n  return (\n    <AppContext.Provider\n      value={{\n        status,\n        setTimerStatus,\n        hours,\n        setHours,\n        minutes,\n        setMinutes,\n        seconds,\n        setSeconds,\n        breakHours,\n        setBreakHours,\n        breakMinutes,\n        setBreakMinutes,\n        breakSeconds,\n        setBreakSeconds,\n        workoutStatus,\n        setWorkoutStatus,\n        formattedTime,\n        currentTime,\n        setCurrentTime,\n        onInitializeTimerQueue,\n        onAddTimer,\n        timerQueue,\n        onStopTimer,\n        workflowState,\n        currentTimer,\n        _setCurrentTimer,\n        _shouldRender,\n        rounds,\n        setRounds,\n        onSkipRound,\n        interfaceState,\n        setInterfaceState,\n        formattedBreakTime,\n        _removeFromQueue,\n        setTimer,\n        onFastForward\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppProvider;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../../context/AppProvider\";\nimport { APP_UI_KEYS, APP_ICON_KEYS } from \"../../context/settings\";\nimport AnchorButton from \"../buttons/AnchorButton\";\n\nconst AppUIStateToggle = () => {\n  const { interfaceState, setInterfaceState } = useContext(AppContext);\n\n  const renderSettings = () => {\n    return (\n      <div className=\"Default-Container\">\n        <AnchorButton\n          name=\"\"\n          iconRef={APP_ICON_KEYS.BACK}\n          className=\"Special Float-Right\"\n          onClick={() => setInterfaceState(APP_UI_KEYS.FLOW)}\n        />\n      </div>\n    );\n  };\n\n  const renderFlow = () => {\n    return (\n      <div className=\"Default-Container\">\n        <AnchorButton\n          name=\"\"\n          iconRef={APP_ICON_KEYS.SETTINGS}\n          className=\"Float-Right\"\n          onClick={() => setInterfaceState(APP_UI_KEYS.SETTINGS)}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {interfaceState === APP_UI_KEYS.SETTINGS\n        ? renderSettings()\n        : renderFlow()}\n    </>\n  );\n};\n\nexport default AppUIStateToggle;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Input.css\";\n\nconst Input = ({ onChange, className, placeholder, label, value }) => {\n  return (\n    <>\n      <div className=\"1x-label-wrapper\">\n        <div className=\"1x-label-wrapper\">\n          <label>{label}</label>\n        </div>\n        <div className=\"1x-label-wrapper\">\n          <input\n            onChange={(e) => {\n              onChange(e.target.value);\n            }}\n            className={className}\n            placeholder={placeholder}\n            value={value}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nInput.propTypes = {\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  label: PropTypes.string,\n};\n\nInput.defaultProps = {\n  className: \"default-gen-input\",\n  placeholder: \"\",\n  value: \"\",\n  label: \"\",\n};\n\nexport default Input;\n","import \"./Options.css\";\n\n// TODO: Convert to functional component. [DONE]\nconst Options = (props) => {\n  return (\n    <div className=\"option-input-wrapper\">\n      <label>{props.name}</label>\n      <select\n        onChange={(e) => {\n          props.onChange(e.target.value);\n        }}\n        className={props.className || \"default-selected-element\"}\n        value={props.current || 0}\n      >\n        {(props.options || [\"Nothing found\"]).map((e, i) => {\n          return (\n            <option key={i} value={e}>\n              {e}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nexport default Options;\n","import React from \"react\";\nimport Options from \"../Inputs/Options\";\n\nconst TimeInputs = ({\n  onSetHours,\n  onSetSeconds,\n  onSetMinutes,\n  hours,\n  minutes,\n  seconds,\n}) => {\n  const secarr = [...Array(60).keys()];\n  secarr.shift();\n  return (\n    <>\n      <div className=\"digital-display-wrapper\">\n        <Options\n          options={[...Array(24).keys()]}\n          onChange={onSetHours}\n          current={hours || 0}\n          name=\"Hours\"\n        />\n        <Options\n          options={[...Array(60).keys()]}\n          onChange={onSetMinutes}\n          current={minutes || 0}\n          name=\"Minutes\"\n        />\n        <Options\n          options={secarr}\n          onChange={onSetSeconds}\n          current={seconds || 0}\n          name=\"Seconds\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default TimeInputs;\n","import React, { useContext, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AnchorButton from \"../buttons/AnchorButton\";\nimport { AppContext } from \"../../context/AppProvider\";\nimport AppUIStateToggle from \"./AppUIStateToggle\";\nimport { APP_UI_KEYS } from \"../../context/settings\";\nimport Input from \"../Inputs/Input\";\nimport TimeInputs from \"./TimeInputs\";\n\nconst DigitalWatch = ({ vebros }) => {\n  // Simplify the code in parent component by getting getters and setters straigt from context\n  // At this level, i think it is still manage-able. However, you'll be the judge of it :).\n  const {\n    formattedTime: displayTime,\n    onAddTimer,\n    onStopTimer: onCloseTimer,\n    setSeconds: onSetSeconds,\n    setMinutes: onSetMinutes,\n    setHours: onSetHours,\n  } = useContext(AppContext);\n  const { hours, minutes, seconds, interfaceState, currentTimer, timerQueue } =\n    useContext(AppContext);\n  const toggleOnSettings = interfaceState !== APP_UI_KEYS.FLOW;\n  const [scheduleName, setScheduleName] = useState(\n    `${currentTimer} (${timerQueue.length})`\n  );\n\n  return (\n    <div className=\"gen-content-wrapper\">\n      <AppUIStateToggle />\n      {toggleOnSettings && (\n        <div className=\"digital-display-wrapper\">\n          <Input\n            onChange={setScheduleName}\n            label={\"Name your Schedule.\"}\n            placeholder={\"Name your Schedule.\"}\n            value={scheduleName}\n          />\n          <TimeInputs\n            onSetHours={onSetHours}\n            onSetMinutes={onSetMinutes}\n            onSetSeconds={onSetSeconds}\n            hours={hours}\n            minutes={minutes}\n            seconds={seconds}\n          />\n        </div>\n      )}\n      <div className=\"Preview\">{displayTime || \"00:00:00:00\"}</div>\n      <div className=\"Action-Wrapper\">\n        {!vebros && (\n          <>\n            <AnchorButton\n              name=\"Add Timer\"\n              className=\"Special\"\n              onClick={() => onAddTimer({ name: scheduleName })}\n            />\n            <AnchorButton name=\"Close Timer\" onClick={onCloseTimer} />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nDigitalWatch.propTypes = {\n  vebros: PropTypes.bool,\n};\n\nDigitalWatch.defaultProps = {\n  vebros: false,\n};\n\nexport default DigitalWatch;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AnchorButton from \"../buttons/AnchorButton\";\nimport { APP_ICONS } from \"../../context/settings\";\nimport \"./TimerDisplay.css\";\n\nconst TimerActionButtons = ({\n  onPauseTimer,\n  onSkipRound,\n  onCloseTimer,\n  onFastForward,\n}) => {\n  return (\n    <>\n      <div className=\"button-wrapper\">\n        <AnchorButton\n          active={onPauseTimer !== undefined}\n          icon={APP_ICONS.PAUSE}\n          size={\"sm\"}\n          radious=\"cl\"\n          onClick={() => onPauseTimer(\"paused\")}\n        />\n        <AnchorButton\n          active={onSkipRound !== undefined}\n          icon={APP_ICONS.FAST_FORWARD}\n          size={\"sm\"}\n          radious=\"cl\"\n          onClick={() => onFastForward()}\n        />\n        <AnchorButton\n          active={onCloseTimer !== undefined}\n          icon={APP_ICONS.RESET}\n          size={\"sm\"}\n          radious=\"cl\"\n          onClick={() => onCloseTimer()}\n        />\n      </div>\n    </>\n  );\n};\n\nTimerActionButtons.propTypes = {\n  onPauseTimer: PropTypes.func,\n  onSkipRound: PropTypes.func,\n  onCloseTimer: PropTypes.func,\n  onFastForward: PropTypes.func,\n};\n\nTimerActionButtons.defaultProps = {\n  onPauseTimer: ()=>{},\n  onSkipRound: ()=>{},\n  onCloseTimer: ()=>{},\n  onFastForward: ()=>{},\n};\n\nexport default TimerActionButtons;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../../context/AppProvider\";\nimport { APP_RENDER_KEYS } from \"../../context/settings\";\nimport \"./TimerDisplay.css\";\nimport TimerActionButtons from \"./TimerActionButtons\";\n\nconst TimerDisplay = () => {\n  const {\n    currentTimer,\n    workflowState,\n    rounds,\n    formattedTime: displayTime,\n    setTimerStatus: onPauseTimer,\n    onSkipRound,\n    onStopTimer:onCloseTimer,\n    onFastForward,\n  } = useContext(AppContext);\n\n  const renderState = () => {\n    const TimerButtons = (\n      <TimerActionButtons\n        onPauseTimer={onPauseTimer}\n        onSkipRound={onSkipRound}\n        onCloseTimer={onCloseTimer}\n        onFastForward={onFastForward}\n      />\n    );\n\n    switch (currentTimer) {\n      case APP_RENDER_KEYS.TABATA:\n        return (\n          <div className=\"gen-content-wrapper\">\n            <div className=\"Timer-Tittle\">{workflowState}</div>\n            <div className=\"digital-display-wrapper\">{displayTime}</div>\n            <pre className=\"Rounds-Preview\">Rounds: {rounds}</pre>\n            {TimerButtons}\n          </div>\n        );\n      case APP_RENDER_KEYS.XY:\n        return (\n          <div className=\"gen-content-wrapper\">\n            <div className=\"digital-display-wrapper\">{displayTime}</div>\n            <pre className=\"Rounds-Preview\">Rounds: {rounds}</pre>\n            {TimerButtons}\n          </div>\n        );\n      default:\n        return (\n          <div className=\"gen-content-wrapper\">\n            <div className=\"digital-display-wrapper\">{displayTime}</div>\n            {TimerButtons}\n          </div>\n        );\n    }\n  };\n  return <>{renderState()}</>;\n}\n\nexport default TimerDisplay;\n","import React, { useContext } from \"react\";\nimport AnchorButton from \"../buttons/AnchorButton\";\nimport { AppContext } from \"../../context/AppProvider\";\nimport { APP_ICONS } from \"../../context/settings\";\n\nconst PauseDisplay = () => {\n  // Simplify the code in parent component by getting getters and setters straigt from context\n  // At this level, i think it is still manage-able. However, you'll be the judge of it :).\n  const {\n    formattedTime: displayTime,\n    setTimerStatus: onResumeTimer,\n    onStopTimer: onCloseTimer,\n  } = useContext(AppContext);\n  return (\n    <div className=\"gen-content-wrapper\">\n      <div className=\"digital-display-wrapper\">{displayTime}</div>\n      <div className=\"button-wrapper\">\n        <AnchorButton\n          size={\"sm\"}\n          radious=\"cl\"\n          icon={APP_ICONS.RESUME}\n          onClick={() => onResumeTimer(\"timing\")}\n        />\n        <AnchorButton\n          size={\"sm\"}\n          radious=\"cl\"\n          icon={APP_ICONS.RESET}\n          onClick={onCloseTimer}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default PauseDisplay;\n","import React, { useContext } from \"react\";\nimport AnchorButton from \"../buttons/AnchorButton\";\nimport { AppContext } from \"../../context/AppProvider\";\n\nconst TimerGoal = () => {\n  const { setTimerStatus } = useContext(AppContext);\n\n  return (\n    <>\n      <div className=\"Timer-Goal-Wrapper\">\n        <img alt=\"timer-goal\" src=\"https://raw.githubusercontent.com/prof-tejera/CSCI-E39-A3/main/src/images/goal-reached-animation.gif\" />\n      </div>\n      <AnchorButton name=\"Reset Timer\" onClick={()=>setTimerStatus(\"active\")} />\n    </>\n  );\n}\n\nexport default TimerGoal","import React, { useContext } from \"react\";\nimport AnchorButton from \"../buttons/AnchorButton\";\nimport DigitalWatch from \"../generic/DigitalWatch\";\nimport TimerDisplay from \"../generic/TimerDisplay\";\nimport PauseDisplay from \"../generic/PauseDisplay\";\nimport { AppContext } from \"../../context/AppProvider\";\nimport TimerGoal from \"../generic/TimerGoal\";\n\nconst StopWatch = () => {\n\n  // Import context getters and setters from the Store,\n  // This will work similar to useState. However, all objects are passed down\n  // by reference, to the timer component.\n  const { status, setTimerStatus, currentTimer } = useContext(AppContext);\n\n  // Manage what the user see's at any given state.\n  // Useful way to reduce complexity associated with interfaces is to reduce actions\n  // into managable steps.\n\n  // Notice, each stage renders an independent component in itself, and passes setters down\n  // to allow for easy update of state values.\n\n  // Needed to simplify my approuch by breaking down my code into reusable componets.\n  // Default state displays [nothing to tender.]\n\n  // I simplified the render state function to reduce the amound of data that is passed back\n  // and forth between children and parent component.\n  const renderState = () => {\n    switch (status) {\n      case \"inactive\":\n        return (\n          <AnchorButton\n            name=\"Start Now\"\n            onClick={() => setTimerStatus(\"active\")}\n          />\n        );\n      case \"active\":\n        return (\n          <DigitalWatch />\n        );\n      case \"paused\":\n        return (\n          <PauseDisplay />\n        );\n      case \"timing\":\n        return (\n          <TimerDisplay />\n        );\n      case \"complete\":\n        return (\n          <TimerGoal />\n        );\n      default:\n        return <div>nothing to render</div>;\n    }\n  };\n\n  // This is the actual render. Lets just return the title, and call on the\n  // renderState method to give us an appropriate render based on the current state.\n  return (\n    <div className={\"Default-Pink-Theme\"}>\n      <div className=\"Component-Title\">{currentTimer}</div>\n      {renderState()}\n    </div>\n  );\n};\n\nexport default StopWatch;\n","import React, { useContext } from \"react\";\nimport AnchorButton from \"../buttons/AnchorButton\";\nimport DigitalWatch from \"../generic/DigitalWatch\";\nimport TimerDisplay from \"../generic/TimerDisplay\";\nimport PauseDisplay from \"../generic/PauseDisplay\";\nimport { AppContext } from \"../../context/AppProvider\";\nimport TimerGoal from \"../generic/TimerGoal\";\n\nconst Countdown = () => {\n  // Import context getters and setters from the Store,\n  // This will work similar to useState. However, all objects are passed down\n  // by reference, to the timer component.\n  const { status, setTimerStatus, currentTimer } = useContext(AppContext);\n  // Manage what the user see's at any given state.\n  // Useful way to reduce complexity associated with interfaces is to reduce actions\n  // into managable steps.\n\n  // Notice, each stage renders an independent component in itself, and passes setters down\n  // to allow for easy update of state values.\n\n  // Needed to simplify my approuch by breaking down my code into reusable componets.\n  // Default state displays [nothing to tender.]\n\n  // I simplified the render state function to reduce the amound of data that is passed back\n  // and forth between children and parent components.\n  const renderState = () => {\n    switch (status) {\n      case \"queue\":\n        return (\n          <>\n            <DigitalWatch \n              vebros={true}\n            />\n            <AnchorButton\n              name=\"Add to queue\"\n              onClick={() => setTimerStatus(\"active\")}\n            />\n          </>\n        );\n      case \"inactive\":\n        return (\n          <AnchorButton\n            name=\"Start Now\"\n            onClick={() => setTimerStatus(\"active\")}\n          />\n        );\n      case \"active\":\n        return <DigitalWatch />;\n      case \"paused\":\n        return <PauseDisplay />;\n      case \"timing\":\n        return <TimerDisplay />;\n      case \"complete\":\n        return <TimerGoal />;\n      default:\n        return <div>nothing to render</div>;\n    }\n  };\n\n  // This is the actual render. Lets just return the title, and call on the\n  // renderState method to give us an appropriate render based on the current state.\n  return (\n    <div className={\"Default-Pink-Theme\"}>\n      <div className=\"Component-Title\">{currentTimer}</div>\n      {renderState()}\n    </div>\n  );\n};\n\nexport default Countdown;\n","import React, { useContext, useState } from \"react\";\nimport Options from \"../Inputs/Options\";\nimport AnchorButton from \"../buttons/AnchorButton\";\nimport { AppContext } from \"../../context/AppProvider\";\nimport { APP_RENDER_KEYS, APP_UI_KEYS } from \"../../context/settings\";\nimport AppUIStateToggle from \"./AppUIStateToggle\";\nimport Input from \"../Inputs/Input\";\nimport \"./TimerRenderer.css\";\nimport TimeInputs from \"./TimeInputs\";\n\n\nconst TimerRenderer = () => {\n  // Simplify the code in parent component by getting getters and setters straigt from context\n  // At this level, i think it is still manage-able. However, you'll be the judge of it :).\n  const {\n    currentTimer,\n    setRounds,\n    formattedTime: displayTime,\n    formattedBreakTime: displayBreakTime,\n    onAddTimer,\n    onStopTimer: onCloseTimer,\n    setSeconds: onSetSeconds,\n    setMinutes: onSetMinutes,\n    setHours: onSetHours,\n    timerQueue,\n    setBreakHours: onSetBreakHours,\n    setBreakMinutes: onSetBreakMinutes,\n    setBreakSeconds: onSetBreakSeconds,\n    breakHours,\n    breakMinutes,\n    breakSeconds,\n    interfaceState,\n    rounds,\n    hours,\n    minutes,\n    seconds,\n  } = useContext(AppContext);\n  const [scheduleName, setScheduleName] = useState(\n    `${currentTimer} (${timerQueue.length})`\n  );\n  const toggleOnSettings = interfaceState !== APP_UI_KEYS.FLOW;\n\n  const renderState = () => {\n    switch (currentTimer) {\n      case APP_RENDER_KEYS.TABATA:\n        return (\n          <div className=\"gen-content-wrapper\">\n            <AppUIStateToggle />\n            <pre className=\"title-wrapper\">Workout Duration</pre>\n            {!toggleOnSettings ? (\n              <>\n                <div className=\"Preview Small\">{displayTime}</div>\n              </>\n            ) : (\n              <div className=\"digital-display-wrapper\">\n                <Input\n                  onChange={setScheduleName}\n                  label={\"Name your Schedule.\"}\n                  placeholder={\"Name your Schedule.\"}\n                  value={scheduleName}\n                />\n                <TimeInputs\n                  onSetHours={onSetHours}\n                  onSetSeconds={onSetSeconds}\n                  onSetMinutes={onSetMinutes}\n                  hours={hours}\n                  minutes={minutes}\n                  seconds={seconds}\n                />\n              </div>\n            )}\n            <pre className=\"title-wrapper\">Break Duration</pre>\n            {!toggleOnSettings ? (\n              <div className=\"Preview Small\">{displayBreakTime}</div>\n            ) : (\n              <div className=\"digital-display-wrapper\">\n                <TimeInputs\n                  onSetHours={onSetBreakHours}\n                  onSetMinutes={onSetBreakMinutes}\n                  onSetSeconds={onSetBreakSeconds}\n                  hours={breakHours}\n                  minutes={breakMinutes}\n                  seconds={breakSeconds}\n                />\n              </div>\n            )}\n\n            <div className=\"Preview\">\n              {!toggleOnSettings ? (\n                <>\n                  <pre className=\"title-wrapper\">Rounds</pre>\n                  <div className=\"Preview Small\">{rounds}</div>\n                </>\n              ) : (\n                <>\n                  <Options\n                    options={[...Array(30).keys()]}\n                    onChange={setRounds}\n                    current={rounds || 0}\n                    name=\"Rounds\"\n                  />\n                </>\n              )}\n            </div>\n            <div className=\"Action-Wrapper\">\n              <AnchorButton\n                name=\"Add Timer\"\n                className=\"Special\"\n                onClick={() => onAddTimer({ name: scheduleName })}\n              />\n              <AnchorButton name=\"Close Timer\" onClick={onCloseTimer} />\n            </div>\n          </div>\n        );\n      default:\n        return (\n          <div className=\"gen-content-wrapper\">\n            <AppUIStateToggle />\n\n            {!toggleOnSettings ? (\n              <>\n                <pre className=\"title-wrapper\">Time</pre>\n                <div className=\"Preview Small\">{displayTime}</div>\n              </>\n            ) : (\n              <div className=\"digital-display-wrapper\">\n                <Input\n                  onChange={setScheduleName}\n                  label={\"Name your Schedule.\"}\n                  placeholder={\"Name your Schedule.\"}\n                  value={scheduleName}\n                />\n                <TimeInputs\n                  onSetHours={onSetHours}\n                  onSetMinutes={onSetMinutes}\n                  onSetSeconds={onSetSeconds}\n                  hours={hours}\n                  minutes={minutes}\n                  seconds={seconds}\n                />\n              </div>\n            )}\n            {!toggleOnSettings ? (\n              <>\n                <pre className=\"title-wrapper\">Rounds</pre>\n                <div className=\"Preview Small\">{rounds}</div>\n              </>\n            ) : (\n              <div className=\"Preview\">\n                {displayTime || \"00:00:00:00\"}\n                <Options\n                  options={[...Array(30).keys()]}\n                  onChange={setRounds}\n                  current={rounds || 0}\n                  name=\"Rounds\"\n                />\n              </div>\n            )}\n            <div className=\"Action-Wrapper\">\n              <AnchorButton\n                name=\"Add Timer\"\n                className=\"Special\"\n                onClick={() => onAddTimer({ name: scheduleName })}\n              />\n              <AnchorButton name=\"Close Timer\" onClick={onCloseTimer} />\n            </div>\n          </div>\n        );\n    }\n  };\n  return <>{renderState()}</>;\n}\n\nexport default TimerRenderer;\n","import React, { useContext } from \"react\";\nimport AnchorButton from \"../buttons/AnchorButton\";\nimport TimerRenderer from \"../generic/TimerRenderer\";\nimport TimerDisplay from \"../generic/TimerDisplay\";\nimport PauseDisplay from \"../generic/PauseDisplay\";\nimport TimerGoal from \"../generic/TimerGoal\";\nimport { AppContext } from \"../../context/AppProvider\";\n\n// swap between functionalities depending on the status value.\nconst RenderState = () => {\n    const {setTimerStatus, status} = useContext(AppContext)\n    return (\n      <>\n      {status===\"queue\" && <AnchorButton name=\"Add to queue\" onClick={() => setTimerStatus(\"active\")}/>}\n      {status===\"inactive\" && <AnchorButton name=\"Start Now\" onClick={() => setTimerStatus(\"active\")}/>}\n      {status===\"active\" && <TimerRenderer />}\n      {status===\"paused\" && <PauseDisplay />}\n      {status===\"timing\" && <TimerDisplay />}\n      {status===\"complete\" && <TimerGoal />}\n      </>\n    );\n  };\n\nexport default RenderState;","import React, { useContext } from \"react\";\nimport { AppContext } from \"../../context/AppProvider\";\nimport RenderState from \"./RenderState\";\n\nconst Tabata = () => {\n\n  // Import context getters and setters from the Store,\n  // This will work similar to useState. However, all objects are passed down\n  // by reference, to the timer component.\n  const { currentTimer } = useContext(AppContext);\n\n  // Manage what the user see's at any given state.\n  // Useful way to reduce complexity associated with interfaces is to reduce actions\n  // into managable steps.\n\n  // Notice, each stage renders an independent component in itself, and passes setters down\n  // to allow for easy update of state values.\n\n  // Needed to simplify my approuch by breaking down my code into reusable componets.\n  // Default state displays [nothing to tender.]\n\n  // I simplified the render state function to reduce the amound of data that is passed back\n  // and forth between children and parent component.\n\n  // This is the actual render. Lets just return the title, and call on the\n  // renderState method to give us an appropriate render based on the current state.\n  return (\n    <div className={\"Default-Pink-Theme\"}>\n      <div className=\"Component-Title\">{currentTimer}</div>\n      <RenderState />\n    </div>\n  );\n};\n\nexport default Tabata;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../../context/AppProvider\";\nimport RenderState from \"./RenderState\";\n\nconst XY = () => {\n\n  // Import context getters and setters from the Store,\n  // This will work similar to useState. However, all objects are passed down\n  // by reference, to the timer component.\n  const { currentTimer } = useContext(AppContext);\n\n  // Manage what the user see's at any given state.\n  // Useful way to reduce complexity associated with interfaces is to reduce actions\n  // into managable steps.\n\n  // Notice, each stage renders an independent component in itself, and passes setters down\n  // to allow for easy update of state values.\n\n  // Needed to simplify my approuch by breaking down my code into reusable componets.\n  // Default state displays [nothing to tender.]\n\n  // This is the actual render. Lets just return the title, and call on the\n  // renderState method to give us an appropriate render based on the current state.\n  return (\n    <div className={\"Default-Pink-Theme\"}>\n      <div className=\"Component-Title\">{currentTimer}</div>\n      <RenderState />\n    </div>\n  );\n};\n\nexport default XY;\n","import Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport Tabata from \"../components/timers/Tabata\";\nimport XY from \"../components/timers/XY\";\nimport {\n  AiOutlineSetting,\n  AiOutlineFieldTime,\n  AiOutlineRollback,\n  AiOutlineDelete,\n  AiOutlinePlayCircle,\n  AiOutlineStepForward,\n  AiOutlineRetweet,\n  AiFillFastForward,\n  AiOutlinePauseCircle,\n  AiOutlineSave\n} from \"react-icons/ai\";\n\n// Server which houses application files.\nconst server =\n  \"https://raw.githubusercontent.com/prof-tejera/CSCI-E39-A3/\";\n\n// Application render keys for each render state.\nexport const APP_RENDER_KEYS = {\n  MENU: \"MENU\",\n  TABATA: \"TABATA\",\n  COUNTDOWN: \"COUNTDOWN\",\n  STOPWATCH: \"STOPWATCH\",\n  XY: \"XY\",\n};\n\n// Application icons values. Quick way to manage icons used through out the\n// application.\nexport const APP_ICONS = {\n  DELETE: <AiOutlineDelete style={{ color: \"red\", fontSize: 15 }} />,\n  SETTINGS: <AiOutlineSetting />,\n  START_TIMER: <AiOutlineFieldTime />,\n  BACK: <AiOutlineRollback />,\n  PLAY: <AiOutlinePlayCircle />,\n  RESUME: <AiOutlineStepForward />,\n  PAUSE: <AiOutlinePauseCircle />,\n  RESET: <AiOutlineRetweet />,\n  FAST_FORWARD: <AiFillFastForward />,\n  QUEUE: <AiOutlineSave />,\n};\n// Reference to application icon keys.\nexport const APP_ICON_KEYS = {\n  DELETE: \"DELETE\",\n  SETTINGS: \"SETTINGS\",\n  START_TIMER: \"START_TIMER\",\n  BACK: \"BACK\",\n};\n\n// Application audio files and other settings comes here.\nexport const APP_AUDIO = {\n  VOLUME: 0.05,\n  CLIPS: {\n    ON_START_TIMER: `${server}main/src/audio/TimerStartVolume01.mp3`,\n    ON_CLICK: `${server}main/src/audio/goalVolume02.mp3`,\n    ON_PAUSE: `${server}main/src/audio/TimerPauseVolume01.mp3`,\n    ON_TIMING: `${server}main/src/audio/TimerTimingVolume01.mp3`,\n    ON_STOP_TIMER: `${server}main/src/audio/TimerPauseVolume01.mp3`,\n    DEFAULT: `${server}main/src/audio/goalVolume01.mp3`,\n    ON_REACHED_GOAL: `${server}main/src/audio/goalVolume02.mp3`,\n    ON_COMPLETE_ROUND: `${server}main/src/audio/goalVolume03.mp3`,\n    ON_REMOVE_ITEM: `${server}main/src/audio/TimerPauseVolume01.mp3`,\n  },\n};\n\n// Keys to each audio clip.\nexport const APP_AUDIO_CLIP_KEYS = {\n  ON_START_TIMER: \"ON_START_TIMER\",\n  ON_CLICK: \"ON_CLICK\",\n  ON_PAUSE: \"ON_PAUSE\",\n  ON_TIMING: \"ON_TIMING\",\n  DEFAULT: \"DEFAULT\",\n  ON_STOP_TIMER: \"ON_STOP_TIMER\",\n  ON_REACHED_GOAL: \"ON_REACHED_GOAL\",\n  ON_COMPLETE_ROUND: \"ON_COMPLETE_ROUND\",\n  ON_REMOVE_ITEM: \"ON_REMOVE_ITEM\",\n};\n\n// Application app flow keys comes here.\nexport const APP_FLOW_KEYS = {\n  WORKOUT: \"Workout Timer\",\n  REST: \"Rest Timer\",\n};\n\n// Application UI keys comes here.\nexport const APP_UI_KEYS = {\n  FLOW: \"FLOW\",\n  SETTINGS: \"SETTINGS\",\n};\n\n// This feature has been replaced with workflowState\n// in AppContext provider.\nlet TIMER_REF = {\n  RENDER_STATE: \"COUNTDOWN\",\n};\n\n// Application timers with associated text and render objects.\nexport const APP_TIMERS = [\n  {\n    title: \"Time your training with a stop watch.\",\n    subTitle:\n      \"Let's get you started with a normal timed session. Time your workout and get feedback from the app in realtime.\",\n    C: <Stopwatch />,\n    S: APP_RENDER_KEYS.STOPWATCH,\n  },\n  {\n    title: \"Set a timed goal, and track your progress.\",\n    subTitle:\n      \"Be proactive! Let's prepare your training session by setting timed goals.\",\n    C: <Countdown recId={1} />,\n    S: APP_RENDER_KEYS.COUNTDOWN,\n  },\n  {\n    title: \"Goal driven session, with rounds.\",\n    subTitle:\n      \"Awesome, now let's take this a step further. Set timed goals with multiple rounds.\",\n    C: <XY />,\n    S: APP_RENDER_KEYS.XY,\n  },\n  {\n    title: \"Now, we need to pace your training.\",\n    subTitle:\n      \"Take a training session with breaks across measurable intervals.\",\n    C: <Tabata />,\n    S: APP_RENDER_KEYS.TABATA,\n  },\n];\n\n// depricated module, please ignore for now.\n// Code has been moved to AppProvider and is now handled with context.\nexport const _shouldRender = ({ state }) => {\n  return false;\n};\n\n// This action is no longer relevent. Replaced with workflowState in AppContext provider.\nexport const setTimerToDisplay = ({ timer }) => {\n  TIMER_REF.RENDER_STATE = APP_RENDER_KEYS[timer] || APP_RENDER_KEYS.COUNTDOWN;\n};\n","import React from \"react\";\nimport { APP_ICONS } from \"../../context/settings\"; \nimport PropTypes from \"prop-types\";\nimport \"./AnchorButton.css\";\nimport { Link } from \"react-router-dom\";\n\nconst AnchorButton = ({to, className, onClick, theme, iconRef, name, size, radious, icon}) => {\n  const IconRef = APP_ICONS[iconRef];\n  return <Link to={to}><button onClick={onClick} className={`default-anchor-button ${className} ${theme} btn-size-${size} border-radious-${radious}`}>{IconRef || \"\"}{icon || name}</button></Link>;\n}\n\nAnchorButton.propTypes = {\n  to: PropTypes.string,\n  radious: PropTypes.oneOf([\"nm\", \"cl\"]),\n  size: PropTypes.oneOf([\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\"]),\n  className: PropTypes.string,\n  theme: PropTypes.string,\n  onClick: PropTypes.func,\n  name: PropTypes.string,\n  icon: PropTypes.object,\n  iconRef: PropTypes.string,\n};\n\nAnchorButton.defaultProps = {\n  to: \"#\",\n  radious: \"nm\",\n  size: \"lg\",\n  className: \"\",\n  theme: \"\",\n  onClick: ()=>{},\n  name: \"\",\n  iconRef: \"\",\n};\n\nexport default AnchorButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Options from \"../Inputs/Options\";\n\nconst Title = styled.div`\n  font-size: 30px;\n`;\n\n\nconst DisplayBreaks = ({name, onSetHours, onSetMinutes, onSetSeconds, onConvertToTime}) => {\n  return (\n    <div>\n      <Title>{name || \"Title\"}</Title>\n      <div className=\"digital-display-wrapper\">\n        <Options\n          options={[...Array(24).keys()]}\n          onChange={onSetHours}\n          name=\"Hours\"\n        />\n        <Options\n          options={[...Array(60).keys()]}\n          onChange={onSetMinutes}\n          name=\"Minutes\"\n        />\n        <Options\n          options={[...Array(60).keys()]}\n          onChange={onSetSeconds}\n          name=\"Seconds\"\n        />\n      </div>\n      <div className=\"Preview\">{onConvertToTime()}</div>\n    </div>\n  );\n};\n\nexport default DisplayBreaks;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport Options from \"../Inputs/Options\";\nimport AnchorButton from \"../buttons/AnchorButton\";\nimport { AppContext } from \"../../context/AppProvider\";\nimport { APP_UI_KEYS } from \"../../context/settings\";\nimport AppUIStateToggle from \"./AppUIStateToggle\";\n\nconst Title = styled.div`\n  font-size: 30px;\n`;\n\n// TODO: Convert to functional component, [DONE]\nconst DisplayRounds = ({ name }) => {\n  const {\n    formattedTime: displayTime,\n    onStartTiming,\n    onStopTimer: onCloseTimer,\n    setSeconds: onSetSeconds,\n    setMinutes: onSetMinutes,\n    setHours: onSetHours,\n    setRounds: onSetRounds,\n    rounds,\n    interfaceState,\n  } = useContext(AppContext);\n  const toggleOnSettings = interfaceState === APP_UI_KEYS.FLOW;\n\n  return (\n    <div>\n      <AppUIStateToggle />\n      <Title>{name} XX</Title>\n      {toggleOnSettings ? (\n        <div className=\"Preview\">{displayTime}</div>\n      ) : (\n        <div className=\"digital-display-wrapper\">\n          <Options\n            options={[...Array(24).keys()]}\n            onChange={onSetHours}\n            name=\"Hours\"\n          />\n          <Options\n            options={[...Array(60).keys()]}\n            onChange={onSetMinutes}\n            name=\"Minutes\"\n          />\n          <Options\n            options={[...Array(60).keys()]}\n            onChange={onSetSeconds}\n            name=\"Seconds\"\n          />\n        </div>\n      )}\n      {toggleOnSettings ? (\n        <div className=\"Preview\">{rounds}</div>\n      ) : (\n        <div className=\"Preview Small\">\n          <Options\n            options={[...Array(11).keys()]}\n            onChange={onSetRounds}\n            name=\"Rounds\"\n          />\n        </div>\n      )}\n      <div className=\"Preview\">\n        {displayTime}\n      </div>\n      <div className=\"Action-Wrapper\">\n        <AnchorButton\n          name=\"Start timing\"\n          className=\"Special\"\n          onClick={onStartTiming}\n        />\n        <AnchorButton name=\"Close Timer\" onClick={onCloseTimer} />\n      </div>\n    </div>\n  );\n};\n//onSetHours onSetMinutes onSetSeconds onSetRounds onConvertToTime onStartTiming onStopTimer\nexport default DisplayRounds;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../../context/AppProvider\";\nimport AnchorButton from \"../buttons/AnchorButton\";\nimport { APP_RENDER_KEYS } from \"../../context/settings\";\n\nconst TimerToolBar = () => {\n    const { _setCurrentTimer, status, currentTimer } = useContext(AppContext);\n    const accessToggle = (status === \"timing\") ? \"inactive\" : \"active\";\n\n    return (\n        <div className={`timer-list ${accessToggle}`}>\n            <AnchorButton\n            className={currentTimer===APP_RENDER_KEYS.COUNTDOWN ? \"Selected\" : \"\"}\n            name={APP_RENDER_KEYS.COUNTDOWN}\n            onClick={() => _setCurrentTimer(APP_RENDER_KEYS.COUNTDOWN)}\n            />\n            <AnchorButton\n            className={currentTimer===APP_RENDER_KEYS.STOPWATCH ? \"Selected\" : \"\"}\n            name={APP_RENDER_KEYS.STOPWATCH}\n            onClick={() => _setCurrentTimer(APP_RENDER_KEYS.STOPWATCH)}\n            />\n            <AnchorButton\n            className={currentTimer===APP_RENDER_KEYS.XY ? \"Selected\" : \"\"}\n            name={APP_RENDER_KEYS.XY}\n            onClick={() => _setCurrentTimer(APP_RENDER_KEYS.XY)}\n            />\n            <AnchorButton\n            className={currentTimer===APP_RENDER_KEYS.TABATA ? \"Selected\" : \"\"}\n            name={APP_RENDER_KEYS.TABATA}\n            onClick={() => _setCurrentTimer(APP_RENDER_KEYS.TABATA)}\n            />\n        </div>\n    )\n}\n\nexport default TimerToolBar;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./DisIcon.css\";\n\nconst DisIcon = ({ icon, size }) => {\n  return <div className={`gen-icon-wrapper-${size}`}>{icon}</div>;\n}\n\nDisIcon.propTypes = {\n  icon: PropTypes.object,\n  size: PropTypes.oneOf([\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\"]),\n};\n\nDisIcon.defaultProps = {\n  icon: null,\n  size: \"xs\",\n};\n\nexport default DisIcon;\n","import React from \"react\";\nimport { APP_ICONS } from \"../../context/settings\";\nimport AnchorButton from \"../../components/buttons/AnchorButton\";\nimport \"./QueueItem.css\"\n\nconst QueueItem = ({ name, onDelete }) => {\n  return (\n    <>\n      <div className=\"list-2x2-wrapper\">\n        <div className=\"list-2x2-item-xl\">\n            <pre>{name}</pre>\n        </div>\n        <div className=\"list-2x2-item-xs\">\n          <AnchorButton radious=\"cl\" icon={APP_ICONS.DELETE} onClick={onDelete} />\n        </div>\n      </div>\n    </>\n  );\n};\n\n\nexport default QueueItem;","import React from \"react\";\nimport \"./TimerSubtitle.css\";\n\nconst TimerSubtitle = ({children}) => {\n  return (<>\n    <div className=\"timer-subtitle-wrapper\">\n        {children}\n    </div>\n  </>);\n}\n\nexport default TimerSubtitle;\n","import React from \"react\";\nimport \"./TimerTitle.css\";\n\nconst TimerTitle = ({children}) => {\n  return (<>\n    <div className=\"timer-title-wrapper\">\n        {children}\n    </div>\n  </>);\n}\n\nexport default TimerTitle;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AppContext } from \"../../context/AppProvider\";\nimport TimerToolBar from \"../../components/generic/TimerToolBar\";\nimport TimerSubtitle from \"../../components/generic/TimerSubtitle\";\nimport TimerTitle from \"../../components/generic/TimerTitle\";\nimport { APP_TIMERS } from \"../../context/settings\";\n\nconst TimerCollection = ( {subTitle} ) => {\n  const { status, _shouldRender } = useContext(AppContext);\n\n  return (\n    <>\n      {APP_TIMERS.map((timer, i) =>\n        _shouldRender({ state: timer.S }) ? (\n          <div key={`timer-${i}`}>\n            {(status !== \"timing\") && <TimerToolBar />}\n            <TimerTitle key={`title-${i}`}>{timer.title}</TimerTitle>\n            <TimerSubtitle key={`sub-title-${i}`}>\n              {timer.subTitle}\n            </TimerSubtitle>\n            {subTitle}\n            {timer.C}\n          </div>\n        ) : (\n          <div key={`empty-${i}`}></div>\n        )\n      )}\n    </>\n  );\n}\n\nTimerCollection.propTypes = {\n  subTitle: PropTypes.string,\n};\n\nTimerCollection.defaultProps = {\n  subTitle: \"\",\n};\n\nexport default TimerCollection;","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\nimport ActionButton from \"../components/buttons/ActionButton\";\nimport AnchorButton from \"../components/buttons/AnchorButton\";\nimport DisplayBreaks from \"../components/generic/DisplayBreaks\";\nimport DisplayRounds from \"../components/generic/DisplayRounds\";\nimport Input from \"../components/Inputs/Input\";\nimport Options from \"../components/Inputs/Options\";\nimport DisplayWatch from \"../components/generic/DigitalWatch\";\nimport PauseDisplay from \"../components/generic/PauseDisplay\";\nimport TimerDisplay from \"../components/generic/TimerDisplay\";\nimport TimerGoal from \"../components/generic/TimerGoal\";\nimport TimerToolBar from \"../components/generic/TimerToolBar\";\nimport DisIcon from \"../components/generic/DisIcon\";\nimport { APP_ICONS } from \"../context/settings\";\nimport QueueItem from \"../components/generic/QueueItem\";\nimport TimerCollection from \"../components/generic/TimerCollection\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 90%;\n  height: 85%;\n  overflow: scroll;\n  background: white;\n  padding: 5%;\n`;\n\nconst Note = styled.div`\n  padding: 30px;\n  font-weight: 300;\n  background: #d2ffd2;\n  border-bottom: 2px solid #0085c5;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nconst Documentation = () => {\n  return (\n    <Container>\n      <div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <Title>Documentation</Title>\n        <br />\n        <Note>\n          <strong>NB</strong>: Due to an upgrade concerned with the way the\n          application handles state, it no longer makes sense to pass certain\n          props values down to some components. Thus, to prevent challenges such\n          as <strong>Props Drilling, or State Hoisting</strong>, most components\n          access certain \"GLOBAL STATE\" values with context directly from the{\" \"}\n          <strong>\n            <a href=\"https://github.com/prof-tejera/CSCI-E39-A3/blob/main/src/context/AppProvider.js\">\n              AppProvider\n            </a>\n          </strong>\n          . For purposes of clarity, note that this is not the ultimate\n          solution. For accurate state management--rather than directly\n          interacting with the state store from UI code, I reckon using\n          something like{\" \"}\n          <strong>\n            <a href=\"https://react-redux.js.org/introduction/why-use-react-redux\">\n              Redux\n            </a>\n          </strong>\n          . However, for purposes of this assignment, react{\" \"}\n          <strong>\n            <a href=\"https://reactjs.org/docs/context.html\">useContext</a>\n          </strong>{\" \"}\n          works well.\n        </Note>\n        <DocumentComponent\n          title=\"Loading spinner \"\n          component={<Loading />}\n          propDocs={[\n            {\n              prop: \"size\",\n              description: \"Changes the size of the loading spinner\",\n              type: \"string\",\n              defaultValue: \"medium\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Action Button \"\n          component={\n            <Input\n              label={\"Label comes here.\"}\n              name=\"Doc Button\"\n              placeholder=\"Doc Input\"\n            />\n          }\n          propDocs={[\n            {\n              prop: \"onChange\",\n              description:\n                \"onChange event handler passed down from parent component.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"label\",\n              description: \"label which comes ontop of the input.\",\n              type: \"string\",\n              defaultValue: \"empty string\",\n            },\n            {\n              prop: \"className\",\n              description: \"Class name--custom styling.\",\n              type: \"string\",\n              defaultValue: \"default-gen-input\",\n            },\n            {\n              prop: \"placeholder\",\n              description:\n                \"The placeholder value displayed when component value is empty.\",\n              type: \"string\",\n              defaultValue: \"Required.\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Anchor Button \"\n          component={<AnchorButton name=\"Doc Button\" />}\n          propDocs={[\n            {\n              prop: \"className\",\n              description: \"Change button theme.\",\n              type: \"string\",\n              defaultValue: \"default-action-button\",\n            },\n            {\n              prop: \"name\",\n              description: \"Change the title text displayed on the button.\",\n              type: \"string\",\n              defaultValue: \"Untitled\",\n            },\n            {\n              prop: \"onClick\",\n              description: \"Button onclick event.\",\n              type: \"function\",\n              defaultValue: \"default action\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Action Button \"\n          component={<ActionButton name=\"Doc Button\" />}\n          propDocs={[\n            {\n              prop: \"className\",\n              description: \"Change button theme.\",\n              type: \"string\",\n              defaultValue: \"default-action-button\",\n            },\n            {\n              prop: \"name\",\n              description: \"Change the title text displayed on the button.\",\n              type: \"string\",\n              defaultValue: \"Untitled\",\n            },\n            {\n              prop: \"onClick\",\n              description: \"Button onclick event.\",\n              type: \"function\",\n              defaultValue: \"default action.\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Action Button \"\n          component={\n            <Options\n              options={[...Array(24).keys()]}\n              onChange={(e = 0) => null}\n              name=\"Doc Options\"\n            />\n          }\n          propDocs={[\n            {\n              prop: \"name\",\n              description:\n                \"The label to be displayed next to the select drop down.\",\n              type: \"string\",\n              defaultValue: \"Untitled\",\n            },\n            {\n              prop: \"options\",\n              description:\n                \"An array object used to generate selectable options.\",\n              type: \"array\",\n              defaultValue: \"['Choose an Option']\",\n            },\n            {\n              prop: \"onChange\",\n              description:\n                \"onChange event handler passed down from parent component.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Display Break\"\n          component={\n            <DisplayBreaks\n              onSetHours={(e = 1) => null}\n              onSetMinutes={(e = 1) => null}\n              onSetSeconds={(e = 1) => null}\n              onSetRounds={(e = 1) => null}\n              onConvertToTime={(e = 1) => \"00:00:00\"}\n              onStartTiming={(e = 1) => null}\n              onStopTimer={(e = 1) => null}\n            />\n          }\n          propDocs={[\n            {\n              prop: \"name\",\n              description: \"Timer title.\",\n              type: \"string\",\n              defaultValue: \"Title\",\n            },\n            {\n              prop: \"onSetHours\",\n              description:\n                \"onSetHours updates parent state once the hours drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetMinutes\",\n              description:\n                \"onSetMinutes updates parent state once the minutes drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetSeconds\",\n              description:\n                \"onSetSeconds updates parent state once the seconds drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onConvertToTime\",\n              description:\n                \"onConvertToTime gets the display time string from the parent component.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n          ]}\n        />\n\n        <DocumentComponent\n          title=\"Display Rounds\"\n          component={\n            <DisplayRounds\n              onSetHours={(e = 1) => null}\n              onSetMinutes={(e = 1) => null}\n              onSetSeconds={(e = 1) => null}\n              onSetRounds={(e = 1) => null}\n              onConvertToTime={(e = 1) => \"00:00:00\"}\n              onStartTiming={(e = 1) => null}\n              onStopTimer={(e = 1) => null}\n            />\n          }\n          propDocs={[\n            {\n              prop: \"name\",\n              description: \"Timer title.\",\n              type: \"string\",\n              defaultValue: \"Title\",\n            },\n            {\n              prop: \"onSetHours\",\n              description:\n                \"onSetHours updates parent state once the hours drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetMinutes\",\n              description:\n                \"onSetMinutes updates parent state once the minutes drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetSeconds\",\n              description:\n                \"onSetSeconds updates parent state once the seconds drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onConvertToTime\",\n              description:\n                \"onConvertToTime gets the display time string from the parent component.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Display Watch\"\n          component={\n            <DisplayWatch\n              currentValues={{ hours: 0, minutes: 0, seconds: 0 }}\n              onSetMinutes={(e = 1) => null}\n              onSetSeconds={(e = 1) => null}\n              onSetRounds={(e = 1) => null}\n              onConvertToTime={(e = 1) => \"00:00:00\"}\n              onStartTiming={(e = 1) => null}\n              onStopTimer={(e = 1) => null}\n            />\n          }\n          propDocs={[\n            {\n              prop: \"onSetHours\",\n              description:\n                \"onSetHours updates parent state once the hours drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetMinutes\",\n              description:\n                \"onSetMinutes updates parent state once the minutes drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetSeconds\",\n              description:\n                \"onSetSeconds updates parent state once the seconds drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetRounds\",\n              description:\n                \"onSetRounds updates parent state once the rounds input changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onStartTiming\",\n              description:\n                \"onStartTiming updates parent state once the start timing button has been clicked.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetHours\",\n              description:\n                \"onSetHours updates parent state once the hours drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onStopTimer\",\n              description:\n                \"onStopTimer updates parent state once the Stop Timer button is clicked.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Timer Display\"\n          component={\n            <TimerDisplay\n              currentValues={{ hours: 0, minutes: 0, seconds: 0 }}\n              onSetHours={(e = 1) => null}\n              onSetMinutes={(e = 1) => null}\n              onSetSeconds={(e = 1) => null}\n              onSetRounds={(e = 1) => null}\n              onConvertToTime={(e = 1) => \"00:00:00\"}\n              onStartTiming={(e = 1) => null}\n              onStopTimer={(e = 1) => null}\n            />\n          }\n          propDocs={[\n            {\n              prop: \"onSetHours\",\n              description:\n                \"onSetHours updates parent state once the hours drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetMinutes\",\n              description:\n                \"onSetMinutes updates parent state once the minutes drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetSeconds\",\n              description:\n                \"onSetSeconds updates parent state once the seconds drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetRounds\",\n              description:\n                \"onSetRounds updates parent state once the rounds input changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onStartTiming\",\n              description:\n                \"onStartTiming updates parent state once the start timing button has been clicked.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetHours\",\n              description:\n                \"onSetHours updates parent state once the hours drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onStopTimer\",\n              description:\n                \"onStopTimer updates parent state once the Stop Timer button is clicked.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Pause Display\"\n          component={<PauseDisplay />}\n          propDocs={[\n            {\n              prop: \"displayTime\",\n              description:\n                \"PauseDisplay relies on displayTime which is destructured from AppProvider as a contextValue. This field renders time on the screen.\",\n              type: \"string\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onResumeTimer\",\n              description:\n                \"PauseDisplay relies on onResumeTimer which is destructured from AppProvider as a contextValue. onResumeTimer changes state of timer to timing, which intern starts the timer.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onCloseTimer\",\n              description:\n                \"PauseDisplay relies on onCloseTimer which is destructured from AppProvider as a contextValue. This function closes the timer completely, and resets it.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n          ]}\n        />\n\n        <DocumentComponent\n          title=\"Timer Goal\"\n          component={\n            <TimerGoal\n              currentValues={{ hours: 0, minutes: 0, seconds: 0 }}\n              onSetHours={(e = 1) => null}\n              onSetMinutes={(e = 1) => null}\n              onSetSeconds={(e = 1) => null}\n              onSetRounds={(e = 1) => null}\n              onConvertToTime={(e = 1) => \"00:00:00\"}\n              onStartTiming={(e = 1) => null}\n              onStopTimer={(e = 1) => null}\n            />\n          }\n          propDocs={[\n            {\n              prop: \"setTimerStatus\",\n              description:\n                \"Timer Goal relies on setTimerStatus from AppProvider. Timer Goal uses this function to set timer active once user has reached its goal. Called with Reset Button.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n          ]}\n        />\n\n        <DocumentComponent\n          title=\"Pause Display\"\n          component={\n            <PauseDisplay\n              currentValues={{ hours: 0, minutes: 0, seconds: 0 }}\n              onSetHours={(e = 1) => null}\n              onSetMinutes={(e = 1) => null}\n              onSetSeconds={(e = 1) => null}\n              onSetRounds={(e = 1) => null}\n              onConvertToTime={(e = 1) => \"00:00:00\"}\n              onStartTiming={(e = 1) => null}\n              onStopTimer={(e = 1) => null}\n            />\n          }\n          propDocs={[\n            {\n              prop: \"onSetHours\",\n              description:\n                \"onSetHours updates parent state once the hours drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetMinutes\",\n              description:\n                \"onSetMinutes updates parent state once the minutes drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetSeconds\",\n              description:\n                \"onSetSeconds updates parent state once the seconds drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetRounds\",\n              description:\n                \"onSetRounds updates parent state once the rounds input changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onStartTiming\",\n              description:\n                \"onStartTiming updates parent state once the start timing button has been clicked.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetHours\",\n              description:\n                \"onSetHours updates parent state once the hours drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onStopTimer\",\n              description:\n                \"onStopTimer updates parent state once the Stop Timer button is clicked.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Timer Tool Bar\"\n          component={<TimerToolBar />}\n          propDocs={[\n            {\n              prop: \"_setCurrentTimer\",\n              description:\n                \"_setCurrentTimer updates current timer once user selects a timer to render.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"status\",\n              description:\n                \"status is required to determin when to disable mouse events. Note, mouse events are disabled once the timer is in a timing state--although swaping timers during this state works, it makes no sence to do so form a functional perspective.\",\n              type: \"string\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"onSetSeconds\",\n              description:\n                \"onSetSeconds updates parent state once the seconds drop down changed.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"currentTimer\",\n              description:\n                \"currentTimer is used to test if the timer button should render with selected class appended.\",\n              type: \"string\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"APP_RENDER_KEYS\",\n              description:\n                \"APP_RENDER_KEYS is an associative array which is access from a AppProvider with context as a lookup reference to determin which timer is selected, and the associated key value pair to use once updating new timer values once timer is selected.\",\n              type: \"array\",\n              defaultValue: \"Required\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Display Icon (DisIcon)\"\n          component={<DisIcon icon={APP_ICONS.PLAY} />}\n          propDocs={[\n            {\n              prop: \"icon\",\n              description:\n                \"icon takes an input of the APP_ICONS[key] object to display as an icon.\",\n              type: \"object\",\n              defaultValue: \"null\",\n            },\n          ]}\n        />\n\n        <DocumentComponent\n          title=\"Queue Item (QueueItem)\"\n          component={\n            <QueueItem\n              key={1}\n              name={\"Item 01\"}\n              onDelete={() => {\n                alert(\"You can't delete from here!\");\n              }}\n            />\n          }\n          propDocs={[\n            {\n              prop: \"name\",\n              description:\n                \"A descriptive string which will be used to label the item in a queue. This does'nt have to be unique.\",\n              type: \"string\",\n              defaultValue: \"empty string\",\n            },\n            {\n              prop: \"onDelete\",\n              description:\n                \"This value passes down a function to be called once the item has been deleted from the list. Well, it the actual function that handles dequeueing of an item.\",\n              type: \"function\",\n              defaultValue: \"null\",\n            },\n          ]}\n        />\n\n        <DocumentComponent\n          title=\"TimerCollection\"\n          component={\n            <Container size=\"xl\" height={300}>\n              <TimerCollection />\n            </Container>\n          }\n          propDocs={[\n            {\n              prop: \"_removeFromQueue\",\n              description:\n                \"_removeFromQueue is destructutred from AppContext and used as a method that handles removing of items from a queue.\",\n              type: \"function\",\n              defaultValue: \"Required\",\n            },\n            {\n              prop: \"timerQueue\",\n              description:\n                \"Timer queue is destructutred from AppContext and used as an sequential array which houses a list of configurations saved by the user during setup.\",\n              type: \"array\",\n              defaultValue: \"Required\",\n            },\n          ]}\n        />\n\n        <DocumentComponent\n          title=\"Container\"\n          component={\n            <Container size=\"xl\" height={300}>\n              This is a container\n            </Container>\n          }\n          propDocs={[\n            {\n              prop: \"size\",\n              description:\n                \"size is used to manipulate the layout width of the container and fit it in relation to the sizes of containers within the same flex div.\",\n              type: \"string\",\n              defaultValue: \"lg\",\n            },\n            {\n              prop: \"height\",\n              description:\n                \"height is used to set the minimum hight of the given container. This value is overwritten once content inside the container exceeds the given hight. The container, in it's self is not limited with scroll and overflow constrains.\",\n              type: \"int\",\n              defaultValue: \"300\",\n            },\n          ]}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default Documentation;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Container.css\";\n\nconst Container = ({ progress, size, className, children, height }) => {\n  return (\n    <div\n      className={[`size-${size}`, \"generic-container\", className].join(\" \")}\n      style={{ minHeight: height }}\n    >\n      <div className={[\"overlay\", \"progress-\" + progress].join(\" \")}>\n        <div className={[\"InnerWraper\"].join(\" \")}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nContainer.propTypes = {\n  progress: PropTypes.number,\n  className: PropTypes.string,\n  height: PropTypes.number,\n  size: PropTypes.oneOf([\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\"]),\n};\n\nContainer.defaultProps = {\n  progress: 0,\n  className: null,\n  size: \"lg\",\n  height: 300,\n};\n\nexport default Container;\n","import React, { useContext } from \"react\";\nimport Container from \"../components/generic/Container\";\nimport \"./AddTimersView.css\";\nimport { AppContext } from \"../context/AppProvider\";\nimport AnchorButton from \"../components/buttons/AnchorButton\";\nimport TimerCollection from \"../components/generic/TimerCollection\";\nimport QueueItem from \"../components/generic/QueueItem\";\n\nfunction AddTimerView() {\n  const { timerQueue, _removeFromQueue } = useContext(AppContext);\n  \n  return (\n    <div className={`workflow-wrapper`}>\n      <div className=\"multi-section-wrapper\">\n        <Container size=\"sm\" height={300}>\n          <div className=\"workout-header-wrapper\">\n            <h6>Workout Queue.</h6>\n          </div>\n          <div className=\"workout-queue-wrapper\">\n            {timerQueue.map((e,i) => (\n              <QueueItem key={i} name={e.name} onDelete={() => {_removeFromQueue(i)}} />\n            ))}\n          </div>\n          <div className=\"workout-action-wrapper\">\n            <AnchorButton to=\"/CSCI-E39-A3/\" name={\"Back to Queue.\"} size=\"sm\" className=\"Action\" onClick={()=>{}} />\n          </div>\n        </Container>\n        <Container size=\"xl\" height={300}>\n          <TimerCollection />\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default AddTimerView;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../context/AppProvider\";\nimport { APP_ICONS } from \"../context/settings\";\nimport Container from \"../components/generic/Container\";\nimport AnchorButton from \"../components/buttons/AnchorButton\";\nimport \"./DashboardView.css\";\nimport { _queueToTotalDuration } from \"../utils/helpers\";\nimport TimerCollection from \"../components/generic/TimerCollection\";\nimport DisIcon from \"../components/generic/DisIcon\";\n\nconst Timers = styled.div`\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  display: inline-block;\n`;\n\nfunction DashboardView() {\n  const { timerQueue, status, onInitializeTimerQueue, _removeFromQueue } = useContext(AppContext);\n  const duration = _queueToTotalDuration({queue:timerQueue})\n\n  return (\n    <div className={`workflow-wrapper`}>\n      <Timers>\n        <Container>\n          {(status === \"active\") && <>\n          <div className=\"timer-queue-headers-xl\">\n            <h6>Workout Schedule.</h6>\n            <p>Should last for about <strong style={{color:\"#0073c5\"}}>{duration}</strong>.</p>\n          </div>\n          <div className=\"timer-queue-list-xl\">\n            {timerQueue.map((e,i) => {\n              return (\n                  <div key={`1_${i}`} className=\"timer-queue-item-xl\">\n                    <div key={`2_${i}`} className=\"sections-1x3-xl\"><DisIcon size={\"sm\"} icon={APP_ICONS.QUEUE} /></div>\n                    <div key={`3_${i}`} className=\"sections-2x3-xl standard-text\">{e.name}</div>\n                    <div key={`4_${i}`} className=\"sections-3x3-xl\"><AnchorButton icon={APP_ICONS.DELETE} size=\"sm\" radious=\"cl\" onClick={()=>{_removeFromQueue(i)}} /></div>\n                  </div>\n              );\n            })}\n          </div>\n          <div className=\"timer-queue-actions-xl\">\n          <AnchorButton to=\"/CSCI-E39-A3/add\" name={\"+\"} size=\"sm\" radious=\"cl\" onClick={()=>{}} />\n          <AnchorButton icon={APP_ICONS.PLAY} size=\"sm\" radious=\"cl\" onClick={()=>{onInitializeTimerQueue()}} />\n          </div>\n          </>}\n          {(status !== \"active\") && <TimerCollection subTitle={\"\"} />}\n        </Container>\n      </Timers>\n      <br />\n      <br />\n      <br />\n    </div>\n  );\n}\n\nexport default DashboardView;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport DocumentationView from \"./views/DocumentationView\";\nimport AppProvider from \"./context/AppProvider\"; \nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport AddTimerView from \"./views/AddTimersView\";\nimport DashboardView from \"./views/DashboardView\";\n\nconst Container = styled.div`\n  height: 100vh;\n  display: block;\n  overflow: hidden;\n`;\n\nconst App = () => {\n      // Add context Store to the entire application.\n      // Not sure if this is the right way, but should work for my setting.\n      // Looking forward to inputs, perhaps some good old constructive criticism :)\n  return (\n    <AppProvider>\n      <Container>\n        <Router>\n          <nav>\n            <h1 className=\"nowrap\" href=\"index.html\">\n              ROK862's CSCI E39 A3\n            </h1>\n            <ul>\n              <li>\n                <Link to=\"/CSCI-E39-A3/\">Queue</Link>\n              </li>\n              <li>\n                <Link to=\"/CSCI-E39-A3/add\">Configure Queue</Link>\n              </li>\n              <li>\n                <Link to=\"/CSCI-E39-A3/docs\">Documentation</Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route exact path=\"/CSCI-E39-A3/\">\n              <DashboardView />\n            </Route>\n            <Route exact path=\"/CSCI-E39-A3/docs\">\n              <DocumentationView />\n            </Route>\n            <Route exact path=\"/CSCI-E39-A3/add\">\n              <AddTimerView />\n            </Route>\n          </Switch>\n        </Router>\n      </Container>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}